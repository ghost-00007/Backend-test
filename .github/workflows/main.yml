name: Deploy Django App to Ubuntu Server

on:
  push:
    branches:
      - main

env:
  APP_DIR: /home/ec2-user/apps/
  APP_NAME: soucient_projectmanagementdev
  WORKING_DIR: /home/ec2-user/apps/soucient_projectmanagementdev
  DEPLOY_DIR: /home/ec2-user/apps/soucient_projectmanagementdev
  GUNICORN_SERVICE: soucient_projectmanagementdev.service
  GUNICORN_SOCKET: soucient_projectmanagementdev.socket
  REQUIREMENTS_PATH: requirements.txt
  MANAGE_PATH: /home/ec2-user/apps/soucient_projectmanagementdev/Backend/
  NGINX_CONF_SRC: /home/ec2-user/service/soucient_projectmanagementdevbk
  NGINX_CONF_DEST: /etc/nginx/sites-available/

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy Django App
        run: |
          echo "Ensuring deployment directory at $DEPLOY_DIR"
          if [ ! -d "$DEPLOY_DIR" ]; then
            echo "Directory $DEPLOY_DIR does not exist. Creating it..."
            sudo mkdir -p "$DEPLOY_DIR"
            sudo chmod -R 777 "$DEPLOY_DIR"
          else
            echo "Directory $DEPLOY_DIR already exists. Skipping creation."
          fi

          if [ -d "$DEPLOY_DIR/.git" ]; then
            echo "Repo exists, pulling latest changes"
            cd $DEPLOY_DIR
            git reset --hard HEAD
            git clean -fd
            git pull origin main
          else
            echo "Cloning repo fresh into $DEPLOY_DIR"
            git clone https://github.com/${{ github.repository }} $DEPLOY_DIR
          fi

          cd $WORKING_DIR
          if [ ! -d "venv" ]; then
            echo "Creating virtual environment"
            python3 -m venv venv
          fi
          source venv/bin/activate

          echo "Installing Python dependencies"
          pip install -r requirements.txt
          pip install gunicorn 

          cd $DEPLOY_DIR/Backend/
          python manage.py makemigrations
          python manage.py migrate
          python manage.py collectstatic --noinput

          echo "Reloading Gunicorn services"
          sudo cp /home/ec2-user/service/$GUNICORN_SERVICE /etc/systemd/system/
          sudo cp /home/ec2-user/service/$GUNICORN_SOCKET /etc/systemd/system/
          sudo systemctl daemon-reload
          sudo systemctl enable $GUNICORN_SOCKET
          sudo systemctl restart $GUNICORN_SERVICE

          echo "Copying Nginx config"
          sudo cp $NGINX_CONF_SRC $NGINX_CONF_DEST

          if [ ! -L /etc/nginx/sites-enabled/$APP_NAME ]; then
            sudo ln -s $NGINX_CONF_DEST /etc/nginx/sites-enabled/$APP_NAME
          else
            echo "Nginx symlink already exists. Skipping."
          fi

          echo "Testing and restarting Nginx"
          sudo nginx -t
          sudo systemctl restart nginx
